{"remainingRequest":"C:\\Users\\Admin\\Desktop\\work\\uniswap\\node_modules\\ts-loader\\index.js??ref--16-1!C:\\Users\\Admin\\Desktop\\work\\uniswap\\src\\Table.tsx","dependencies":[{"path":"C:\\Users\\Admin\\Desktop\\work\\uniswap\\src\\Table.tsx","mtime":1623761361177},{"path":"C:\\Users\\Admin\\Desktop\\work\\uniswap\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1623606005702},{"path":"C:\\Users\\Admin\\Desktop\\work\\uniswap\\node_modules\\ts-loader\\index.js","mtime":1623606013480}],"contextDependencies":[],"result":["import React from \"react\";\r\nimport { format, fromUnixTime } from 'date-fns';\r\nimport NumberFormat from 'react-number-format';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nvar useStyles = makeStyles(function (theme) { return ({\r\n    root: {\r\n        \"&:hover\": {\r\n            backgroundColor: \"transparent\",\r\n        },\r\n    },\r\n    icon: {\r\n        borderRadius: 4,\r\n        width: 20,\r\n        height: 20,\r\n        boxShadow: \"0px 0px 5px rgba(19, 19, 19, 0.25)\",\r\n        backgroundColor: \"#f5f8fa\",\r\n        \"$root.Mui-focusVisible &\": {\r\n            outline: \"2px auto rgba(19,124,189,.6)\",\r\n            outlineOffset: 2,\r\n        },\r\n        \"input:disabled ~ &\": {\r\n            boxShadow: \"none\",\r\n            background: \"rgba(206,217,224,.5)\",\r\n        },\r\n    },\r\n    checkedIcon: {\r\n        backgroundColor: \"#E6BE00\",\r\n        \"&:before\": {\r\n            display: \"block\",\r\n            width: 20,\r\n            height: 20,\r\n            backgroundImage: \"url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpath\" +\r\n                \" fill-rule='evenodd' clip-rule='evenodd' d='M12 5c-.28 0-.53.11-.71.29L7 9.59l-2.29-2.3a1.003 \" +\r\n                \"1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29s.53-.11.71-.29l5-5A1.003 1.003 0 0012 5z' fill='%23000'/%3E%3C/svg%3E\\\")\",\r\n            content: '\"\"',\r\n        },\r\n    },\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n    tableKey: {\r\n        color: \"#7F7F7F\",\r\n        fontWeight: \"normal\",\r\n        fontSize: 14,\r\n        textAlign: \"left\",\r\n    },\r\n    tableCell: {\r\n        color: \"#151515\",\r\n        fontSize: 14,\r\n        textAlign: \"left\",\r\n    },\r\n}); });\r\nfunction descendingComparator(a, b, orderBy) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n        return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\nfunction getComparator(order, orderBy) {\r\n    return order === \"desc\" ? function (a, b) { return descendingComparator(a, b, orderBy); } : function (a, b) { return -descendingComparator(a, b, orderBy); };\r\n}\r\nfunction stableSort(array, comparator) {\r\n    var stabilizedThis = array.map(function (el, index) { return [el, index]; });\r\n    stabilizedThis.sort(function (a, b) {\r\n        var order = comparator(a[0], b[0]);\r\n        if (order !== 0)\r\n            return order;\r\n        return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map(function (el) { return el[0]; });\r\n}\r\nexport var TableComponent = function (_a) {\r\n    var rows = _a.rows, headCells = _a.headCells;\r\n    var classes = useStyles();\r\n    var _b = React.useState(\"asc\"), order = _b[0], setOrder = _b[1];\r\n    var _c = React.useState(\"calories\"), orderBy = _c[0], setOrderBy = _c[1];\r\n    var _d = React.useState([]), selected = _d[0], setSelected = _d[1];\r\n    var _e = React.useState(0), page = _e[0], setPage = _e[1];\r\n    var _f = React.useState(false), dense = _f[0], setDense = _f[1];\r\n    var _g = React.useState(5), rowsPerPage = _g[0], setRowsPerPage = _g[1];\r\n    var handleRequestSort = function (event, property) {\r\n        var isAsc = orderBy === property && order === \"asc\";\r\n        setOrder(isAsc ? \"desc\" : \"asc\");\r\n        setOrderBy(property);\r\n    };\r\n    var createSortHandler = function (property) { return function (event) {\r\n        handleRequestSort(event, property);\r\n    }; };\r\n    var handleSelectAllClick = function (event) {\r\n        if (event.target.checked) {\r\n            var newSelecteds = rows.map(function (n) { return n.id; });\r\n            setSelected(newSelecteds);\r\n            return;\r\n        }\r\n        setSelected([]);\r\n    };\r\n    var handleClick = function (event, name) {\r\n        var selectedIndex = selected.indexOf(name);\r\n        var newSelected = [];\r\n        if (selectedIndex === -1) {\r\n            newSelected = newSelected.concat(selected, name);\r\n        }\r\n        else if (selectedIndex === 0) {\r\n            newSelected = newSelected.concat(selected.slice(1));\r\n        }\r\n        else if (selectedIndex === selected.length - 1) {\r\n            newSelected = newSelected.concat(selected.slice(0, -1));\r\n        }\r\n        else if (selectedIndex > 0) {\r\n            newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\r\n        }\r\n        setSelected(newSelected);\r\n    };\r\n    var handleChangePage = function (event, newPage) {\r\n        setPage(newPage);\r\n    };\r\n    var handleChangeRowsPerPage = function (event) {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n    var handleChangeDense = function (event) {\r\n        setDense(event.target.checked);\r\n    };\r\n    var isSelected = function (name) { return selected.indexOf(name) !== -1; };\r\n    var emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n    var prepareExcel = function () {\r\n        var data = rows;\r\n        if (selected.length > 0) {\r\n            data = data.filter(function (item) { return selected.includes(item.id); });\r\n        }\r\n    };\r\n    return (React.createElement(React.Fragment, null,\r\n        React.createElement(TableContainer, { style: { marginTop: \"10px\", marginBottom: \"20px\", userSelect: \"none\" } },\r\n            React.createElement(Table, { className: classes.table, size: \"small\", \"aria-label\": \"\\u0442\\u0430\\u0431\\u043B\\u0438\\u0446\\u0430\" },\r\n                React.createElement(TableHead, null,\r\n                    React.createElement(TableRow, null, headCells.map(function (headCell) { return (React.createElement(TableCell, { key: headCell.id, align: \"left\", padding: headCell.disablePadding ? \"none\" : \"default\", className: classes.tableKey },\r\n                        React.createElement(TableSortLabel, { active: orderBy === headCell.id, onClick: createSortHandler(headCell.id) }, headCell.label))); }))),\r\n                React.createElement(TableBody, null,\r\n                    stableSort(rows, getComparator(order, orderBy))\r\n                        .map(function (row, index) {\r\n                        var isItemSelected = isSelected(row.id);\r\n                        var labelId = \"enhanced-table-checkbox-\" + index;\r\n                        return (React.createElement(TableRow, { role: \"checkbox\", \"aria-checked\": isItemSelected, tabIndex: -1, key: row.id, selected: isItemSelected },\r\n                            React.createElement(TableCell, { className: classes.tableCell, component: \"th\", scope: \"row\", padding: \"none\" },\r\n                                React.createElement(\"a\", { href: \"https://etherscan.io/tx/\" + row.transaction.id, target: \"_blank\" }, \"view tx\")),\r\n                            React.createElement(TableCell, { className: classes.tableCell },\r\n                                \"Swap \",\r\n                                row.amount0 > 0 ? row.amount0 : row.amount1,\r\n                                \" \",\r\n                                row.token1.symbol,\r\n                                \" for \",\r\n                                row.amount0 > 0 ? row.amount1 * -1 : row.amount0 * -1,\r\n                                \" \",\r\n                                row.token0.symbol),\r\n                            React.createElement(TableCell, { className: classes.tableCell }, format(fromUnixTime(row.timestamp), \"yyyy-MM-dd HH:mm:ss\")),\r\n                            React.createElement(TableCell, { className: classes.tableCell },\r\n                                React.createElement(\"a\", { href: \"https://etherscan.io/address/\" + row.sender, target: \"_blank\" }, row.sender)),\r\n                            React.createElement(TableCell, { className: classes.tableCell },\r\n                                React.createElement(\"a\", { href: \"https://etherscan.io/address/\" + row.recipient, target: \"_blank\" }, row.recipient)),\r\n                            React.createElement(TableCell, { className: classes.tableCell },\r\n                                React.createElement(NumberFormat, { value: row.amountUSD, displayType: 'text', thousandSeparator: true, prefix: '$', decimalScale: 2 }))));\r\n                    }),\r\n                    emptyRows > 0 && (React.createElement(TableRow, { style: { height: (dense ? 33 : 53) * emptyRows } },\r\n                        React.createElement(TableCell, { colSpan: 9 }))))))));\r\n};\r\n",{"version":3,"file":"C:\\Users\\Admin\\Desktop\\work\\uniswap\\src\\Table.tsx","sourceRoot":"","sources":["C:\\Users\\Admin\\Desktop\\work\\uniswap\\src\\Table.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { format, fromUnixTime } from 'date-fns'\r\nimport NumberFormat from 'react-number-format';\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport PaginationItem from \"@material-ui/lab/PaginationItem\";\r\n\r\n//import { exportExcel } from \"../../service\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        \"&:hover\": {\r\n            backgroundColor: \"transparent\",\r\n        },\r\n    },\r\n    icon: {\r\n        borderRadius: 4,\r\n        width: 20,\r\n        height: 20,\r\n        boxShadow: \"0px 0px 5px rgba(19, 19, 19, 0.25)\",\r\n        backgroundColor: \"#f5f8fa\",\r\n        \"$root.Mui-focusVisible &\": {\r\n            outline: \"2px auto rgba(19,124,189,.6)\",\r\n            outlineOffset: 2,\r\n        },\r\n        \"input:disabled ~ &\": {\r\n            boxShadow: \"none\",\r\n            background: \"rgba(206,217,224,.5)\",\r\n        },\r\n    },\r\n    checkedIcon: {\r\n        backgroundColor: \"#E6BE00\",\r\n        \"&:before\": {\r\n            display: \"block\",\r\n            width: 20,\r\n            height: 20,\r\n            backgroundImage:\r\n                \"url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpath\" +\r\n                \" fill-rule='evenodd' clip-rule='evenodd' d='M12 5c-.28 0-.53.11-.71.29L7 9.59l-2.29-2.3a1.003 \" +\r\n                \"1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29s.53-.11.71-.29l5-5A1.003 1.003 0 0012 5z' fill='%23000'/%3E%3C/svg%3E\\\")\",\r\n            content: '\"\"',\r\n        },\r\n    },\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n    tableKey: {\r\n        color: \"#7F7F7F\",\r\n        fontWeight: \"normal\",\r\n        fontSize: 14,\r\n        textAlign: \"left\",\r\n    },\r\n    tableCell: {\r\n        color: \"#151515\",\r\n        fontSize: 14,\r\n        textAlign: \"left\",\r\n    },\r\n}));\r\n\r\n\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n        return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n    return order === \"desc\" ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = comparator(a[0], b[0]);\r\n        if (order !== 0) return order;\r\n        return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nexport const TableComponent = ({ rows, headCells }) => {\r\n    const classes = useStyles();\r\n\r\n    const [order, setOrder] = React.useState(\"asc\");\r\n    const [orderBy, setOrderBy] = React.useState(\"calories\");\r\n    const [selected, setSelected] = React.useState([]);\r\n    const [page, setPage] = React.useState(0);\r\n    const [dense, setDense] = React.useState(false);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n    const handleRequestSort = (event, property) => {\r\n        const isAsc = orderBy === property && order === \"asc\";\r\n        setOrder(isAsc ? \"desc\" : \"asc\");\r\n        setOrderBy(property);\r\n    };\r\n\r\n    const createSortHandler = (property) => (event) => {\r\n        handleRequestSort(event, property);\r\n    };\r\n\r\n    const handleSelectAllClick = (event) => {\r\n        if (event.target.checked) {\r\n            const newSelecteds = rows.map((n) => n.id);\r\n            setSelected(newSelecteds);\r\n            return;\r\n        }\r\n        setSelected([]);\r\n    };\r\n\r\n    const handleClick = (event, name) => {\r\n        const selectedIndex = selected.indexOf(name);\r\n        let newSelected = [];\r\n\r\n        if (selectedIndex === -1) {\r\n            newSelected = newSelected.concat(selected, name);\r\n        } else if (selectedIndex === 0) {\r\n            newSelected = newSelected.concat(selected.slice(1));\r\n        } else if (selectedIndex === selected.length - 1) {\r\n            newSelected = newSelected.concat(selected.slice(0, -1));\r\n        } else if (selectedIndex > 0) {\r\n            newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\r\n        }\r\n\r\n        setSelected(newSelected);\r\n    };\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    const handleChangeDense = (event) => {\r\n        setDense(event.target.checked);\r\n    };\r\n\r\n    const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n    const prepareExcel = () => {\r\n        let data = rows;\r\n\r\n        if (selected.length > 0) {\r\n            data = data.filter((item) => selected.includes(item.id));\r\n        }\r\n\r\n        //exportExcel({ title: \"employee\", data });\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <TableContainer style={{ marginTop: \"10px\", marginBottom: \"20px\", userSelect: \"none\" }}>\r\n                <Table className={classes.table} size=\"small\" aria-label=\"таблица\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            {/* <TableCell padding=\"checkbox\">\r\n                                <Checkbox\r\n                                    indeterminate={selected.length > 0 && selected.length < rows.length}\r\n                                    checked={rows.length > 0 && selected.length === rows.length}\r\n                                    onChange={handleSelectAllClick}\r\n                                    inputProps={{ \"aria-label\": \"выбрать все\" }}\r\n                                />\r\n                            </TableCell> */}\r\n\r\n                            {headCells.map((headCell) => (\r\n                                <TableCell\r\n                                    key={headCell.id}\r\n                                    align={\"left\"}\r\n                                    padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n                                    //sortDirection={orderBy === headCell.id ? order : false}\r\n                                    className={classes.tableKey}\r\n                                >\r\n                                    <TableSortLabel\r\n                                        active={orderBy === headCell.id}\r\n                                        //direction={orderBy === headCell.id ? order : \"asc\"}\r\n                                        onClick={createSortHandler(headCell.id)}\r\n                                    >\r\n                                        {headCell.label}\r\n                                    </TableSortLabel>\r\n                                </TableCell>\r\n                            ))}\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {stableSort(rows, getComparator(order, orderBy))\r\n                            // .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                            .map((row, index) => {\r\n                                const isItemSelected = isSelected(row.id);\r\n                                const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                                return (\r\n                                    <TableRow\r\n                                        role=\"checkbox\"\r\n                                        aria-checked={isItemSelected}\r\n                                        tabIndex={-1}\r\n                                        key={row.id}\r\n                                        selected={isItemSelected}\r\n                                    >\r\n                                        {/* <TableCell padding=\"checkbox\">\r\n                                            <Checkbox\r\n                                                checked={isItemSelected}\r\n                                                inputProps={{ \"aria-labelledby\": labelId }}\r\n                                                onClick={(event) => handleClick(event, row.id)}\r\n                                            />\r\n                                        </TableCell> */}\r\n                                        <TableCell className={classes.tableCell} component=\"th\" scope=\"row\" padding=\"none\">\r\n                                            <a href={`https://etherscan.io/tx/${row.transaction.id}`} target=\"_blank\">view tx</a>\r\n                                        </TableCell>\r\n                                        <TableCell className={classes.tableCell}>Swap {row.amount0 > 0 ? row.amount0 : row.amount1} {row.token1.symbol} for {row.amount0 > 0 ? row.amount1 * -1 : row.amount0 * -1} {row.token0.symbol}</TableCell>\r\n\r\n                                        <TableCell className={classes.tableCell}>{format(fromUnixTime(row.timestamp), \"yyyy-MM-dd HH:mm:ss\")}</TableCell>\r\n                                        <TableCell className={classes.tableCell}><a href={`https://etherscan.io/address/${row.sender}`} target=\"_blank\">{row.sender}</a></TableCell>\r\n                                        <TableCell className={classes.tableCell}><a href={`https://etherscan.io/address/${row.recipient}`} target=\"_blank\">{row.recipient}</a></TableCell>\r\n                                        <TableCell className={classes.tableCell}><NumberFormat value={row.amountUSD} displayType={'text'} thousandSeparator={true} prefix={'$'} decimalScale={2} /></TableCell>\r\n                                        {/* <TableCell className={classes.tableCell}>{row.origin}</TableCell> */}\r\n                                    </TableRow>\r\n                                );\r\n                            })}\r\n                        {emptyRows > 0 && (\r\n                            <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                                <TableCell colSpan={9} />\r\n                            </TableRow>\r\n                        )}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </React.Fragment>\r\n    );\r\n};"]}]}